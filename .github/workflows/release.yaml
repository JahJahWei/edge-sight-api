name: Release Private SDKs

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write
  packages: write

jobs:
  generate-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout API Repo
        uses: actions/checkout@v4

      - name: Extract Version
        id: version
        run: echo "version=${GITHUB_REF_NAME#v}" >> $GITHUB_OUTPUT

      - name: Install Buf
        run: |
          echo "Installing Buf"
          curl -sSL https://github.com/bufbuild/buf/releases/latest/download/buf-$(uname -s)-$(uname -m) -o /usr/local/bin/buf
          chmod +x /usr/local/bin/buf
      
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          registry-url: "https://npm.pkg.github.com"
      
      - name: Setup go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24"
      
      - name: Generate Meta SDK
        run: |
          echo "Generating Meta SDK"
          cd meta
          buf generate

      - name: Push Meta Java SDK
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_ACTOR: ${{ github.actor }}
        run: |
          echo "Pushing Meta Java SDK"

          VERSION=${{ steps.version.outputs.version }}
          
          # Clone the repository
          git clone https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/JahJahWei/meta-api-sdk-java.git

          cd meta-api-sdk-java/src/main/java
          
          # Configure git
          git config user.name github-actions
          git config user.email github-actions@github.com

          # Copy generated files
          cp -r ../meta/gen/meta-api-sdk-java/* .

          # Add all files
          git add .

          # Commit changes
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Sync Meta API Java SDK v$VERSION"
          fi

          # Create tag (ignore if already exists)
          git tag v$VERSION 2>/dev/null || echo "Tag v$VERSION already exists"

          # Push changes and tags
          git push origin master --tags || {
            echo "Push failed, trying to pull and merge first"
            git pull origin master --allow-unrelated-histories --no-edit || echo "Pull failed"
            git push origin master --tags || {
              echo "Push still failed, trying force push"
              git push origin master --tags --force
            }
          }

          # Set environment variables for Maven authentication
          export GH_TOKEN=${{ secrets.GH_TOKEN }}
          export GITHUB_ACTOR=${{ github.actor }}

          mvn clean deploy -DskipTests -s settings.xml
      
      - name: Push Meta Go SDK
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_ACTOR: ${{ github.actor }}
        run: |
          echo "Pushing Meta Go SDK"
          VERSION=${{ steps.version.outputs.version }}
          
          # Clone the repository
          git clone https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/JahJahWei/meta-api-sdk-go.git meta-api-sdk-go
          cd meta-api-sdk-go
          
          # Configure git
          git config user.name github-actions
          git config user.email github-actions@github.com

          # Copy generated files
          cp -r ../meta/gen/meta-api-sdk-go/* .

          # Create go.mod if it doesn't exist
          if [ ! -f go.mod ]; then
            echo 'module github.com/JahJahWei/meta-api-sdk-go' > go.mod
            echo '' >> go.mod
            echo 'go 1.24' >> go.mod
            echo '' >> go.mod
            echo 'require (' >> go.mod
            echo '	google.golang.org/grpc v1.59.0' >> go.mod
            echo '	google.golang.org/protobuf v1.31.0' >> go.mod
            echo ')' >> go.mod
          fi

          # Create README.md if it doesn't exist
          if [ ! -f README.md ]; then
            echo '# Meta API Go SDK' > README.md
            echo '' >> README.md
            echo 'Go SDK for Meta API generated from Protocol Buffers.' >> README.md
            echo '' >> README.md
            echo '## Installation' >> README.md
            echo '' >> README.md
            echo '```bash' >> README.md
            echo 'go get github.com/JahJahWei/meta-api-sdk-go@v'$VERSION >> README.md
            echo '```' >> README.md
          fi

          # Add all files
          git add .

          # Commit changes
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Sync Meta API Go SDK v$VERSION"
          fi

          # Create tag (ignore if already exists)
          git tag v$VERSION 2>/dev/null || echo "Tag v$VERSION already exists"

          # Push changes and tags
          git push origin master --tags || {
            echo "Push failed, trying to pull and merge first"
            git pull origin master --allow-unrelated-histories --no-edit || echo "Pull failed"
            git push origin master --tags || {
              echo "Push still failed, trying force push"
              git push origin master --tags --force
            }
          }

          # Set up Go module for publishing
          go mod tidy
          
          # Create a release for GitHub Packages
          gh release create v$VERSION --generate-notes --repo JahJahWei/meta-api-sdk-go || echo "Release already exists"

