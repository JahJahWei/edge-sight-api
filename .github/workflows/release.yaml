name: Release Private SDKs

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write
  packages: write

jobs:
  generate-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout API Repo
        uses: actions/checkout@v4

      - name: Extract Version
        id: version
        run: echo "version=${GITHUB_REF_NAME#v}" >> $GITHUB_OUTPUT

      - name: Install Buf
        run: |
          echo "Installing Buf"
          curl -sSL https://github.com/bufbuild/buf/releases/latest/download/buf-$(uname -s)-$(uname -m) -o /usr/local/bin/buf
          chmod +x /usr/local/bin/buf

      - name: Generate SDKs
        run: |
          echo "Generating SDKs"
          buf generate

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          registry-url: "https://npm.pkg.github.com"

      - name: Push Meta API Java SDK
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_ACTOR: ${{ github.actor }}
        run: |
          echo "Pushing Meta API Java SDK"
          VERSION=${{ steps.version.outputs.version }}
          git clone https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/JahJahWei/meta-api-sdk.git

          cp -r gen/meta-api-sdk/* meta-api-sdk/
          cd meta-api-sdk
          git config user.name github-actions
          git config user.email github-actions@github.com

          git add .

          if git rev-parse --verify HEAD >/dev/null 2>&1; then
            git commit -m "Sync Meta API Java SDK v$VERSION" || echo "No changes"
          else
            git commit -m "Initial commit: Sync Meta API Java SDK v$VERSION"
          fi

          git tag v$VERSION || echo "tag exists"

          if ! git show-ref --verify --quiet refs/remotes/origin/master; then
            git push origin HEAD:master --tags
          else
            git push origin master --tags
          fi

          # Set environment variables for Maven authentication
          export GH_TOKEN=${{ secrets.GH_TOKEN }}
          export GITHUB_ACTOR=${{ github.actor }}

          mvn clean deploy -DskipTests -s settings.xml

      - name: Push Alert API Node.js SDK
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Pushing Alert API Node.js SDK"
          VERSION=${{ steps.version.outputs.version }}
          git clone https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/JahJahWei/alert-api-sdk-node.git

          cp -r gen/alert-api-sdk-node/* alert-api-sdk-node/
          cd alert-api-sdk-node
          git config user.name github-actions
          git config user.email github-actions@github.com

          # Create package.json if it doesn't exist
          if [ ! -f package.json ]; then
            echo '{"name":"@jahjahwei/alert-api-sdk","version":"'$VERSION'","description":"Node.js SDK for Alert API","main":"index.js","types":"index.d.ts","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"keywords":["grpc","protobuf","api","sdk","alert"],"author":"JahJahWei","license":"MIT","dependencies":{"@grpc/grpc-js":"^1.9.0","@grpc/proto-loader":"^0.7.0","google-protobuf":"^3.21.0"},"devDependencies":{"@types/node":"^18.0.0"},"repository":{"type":"git","url":"git+https://github.com/JahJahWei/alert-api-sdk-node.git"},"bugs":{"url":"https://github.com/JahJahWei/alert-api-sdk-node/issues"},"homepage":"https://github.com/JahJahWei/alert-api-sdk-node#readme"}' > package.json
          fi

          # Update version in package.json
          sed -i "s/\"version\": \".*\"/\"version\": \"$VERSION\"/" package.json

          git add .

          if git rev-parse --verify HEAD >/dev/null 2>&1; then
            git commit -m "Sync Alert API Node.js SDK v$VERSION" || echo "No changes"
          else
            git commit -m "Initial commit: Sync Alert API Node.js SDK v$VERSION"
          fi

          git tag v$VERSION || echo "tag exists"

          if ! git show-ref --verify --quiet refs/remotes/origin/master; then
            git push origin HEAD:master --tags
          else
            git push origin master --tags
          fi

          # Publish to GitHub Packages (npm)
          npm publish
