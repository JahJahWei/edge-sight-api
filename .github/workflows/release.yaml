name: Release Private SDKs

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write
  packages: write

jobs:
  generate-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout API Repo
        uses: actions/checkout@v4

      - name: Extract Version
        id: version
        run: echo "version=${GITHUB_REF_NAME#v}" >> $GITHUB_OUTPUT

      - name: Install Buf
        run: |
          echo "Installing Buf"
          curl -sSL https://github.com/bufbuild/buf/releases/latest/download/buf-$(uname -s)-$(uname -m) -o /usr/local/bin/buf
          chmod +x /usr/local/bin/buf
      
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          registry-url: "https://npm.pkg.github.com"
      
      - name: Setup go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24"
      
      - name: Generate Meta SDK
        run: |
          echo "Generating Meta SDK"
          cd meta
          buf generate

      - name: Push Meta Java SDK
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_ACTOR: ${{ github.actor }}
        run: |
          echo "Pushing Meta Java SDK"
          VERSION=${{ steps.version.outputs.version }}
          git clone https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/JahJahWei/meta-api-sdk.git

          cp -r gen/meta-api-sdk-java/* meta-api-sdk-java/
          cd meta-api-sdk-java
          git config user.name github-actions
          git config user.email github-actions@github.com

          git add .

          if git rev-parse --verify HEAD >/dev/null 2>&1; then
            git commit -m "Sync Meta API Java SDK v$VERSION" || echo "No changes"
          else
            git commit -m "Initial commit: Sync Meta API Java SDK v$VERSION"
          fi

          git tag v$VERSION || echo "tag exists"

          if ! git show-ref --verify --quiet refs/remotes/origin/master; then
            git push origin HEAD:master --tags
          else
            git push origin master --tags
          fi

          # Set environment variables for Maven authentication
          export GH_TOKEN=${{ secrets.GH_TOKEN }}
          export GITHUB_ACTOR=${{ github.actor }}

          mvn clean deploy -DskipTests -s settings.xml
      
      - name: Push Meta Go SDK
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_ACTOR: ${{ github.actor }}
        run: |
          echo "Pushing Meta Go SDK"
          VERSION=${{ steps.version.outputs.version }}
          git clone https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/JahJahWei/meta-api-sdk-go.git

          cp -r gen/meta-api-sdk-go/* meta-api-sdk-go/
          cd meta-api-sdk-go
          git config user.name github-actions
          git config user.email github-actions@github.com

          # Create go.mod if it doesn't exist
          if [ ! -f go.mod ]; then
            echo 'module github.com/JahJahWei/meta-api-sdk-go' > go.mod
            echo '' >> go.mod
            echo 'go 1.24' >> go.mod
            echo '' >> go.mod
            echo 'require (' >> go.mod
            echo '	google.golang.org/grpc v1.59.0' >> go.mod
            echo '	google.golang.org/protobuf v1.31.0' >> go.mod
            echo ')' >> go.mod
          fi

          # Create README.md if it doesn't exist
          if [ ! -f README.md ]; then
            echo '# Meta API Go SDK' > README.md
            echo '' >> README.md
            echo 'Go SDK for Meta API generated from Protocol Buffers.' >> README.md
            echo '' >> README.md
            echo '## Installation' >> README.md
            echo '' >> README.md
            echo '```bash' >> README.md
            echo 'go get github.com/JahJahWei/meta-api-sdk-go@v'$VERSION >> README.md
            echo '```' >> README.md
          fi

          git add .

          if git rev-parse --verify HEAD >/dev/null 2>&1; then
            git commit -m "Sync Meta API Go SDK v$VERSION" || echo "No changes"
          else
            git commit -m "Initial commit: Sync Meta API Go SDK v$VERSION"
          fi

          git tag v$VERSION || echo "tag exists"

          if ! git show-ref --verify --quiet refs/remotes/origin/master; then
            git push origin HEAD:master --tags
          else
            git push origin master --tags
          fi

          # Set up Go module for publishing
          go mod tidy
          
          # Create a release for GitHub Packages
          gh release create v$VERSION --generate-notes --repo JahJahWei/meta-api-sdk-go || echo "Release already exists"

